#!/usr/bin/env bash
# Toggle AMD iGPU between host (amdgpu) and passthrough (vfio-pci)
# Usage: gpu-toggle.sh host|passthrough|status

set -euo pipefail

VFIO_CONF="/etc/modprobe.d/vfio.conf"
AMDGPU_ML="/etc/modules-load.d/amdgpu.conf"

# --- helpers ---------------------------------------------------------------
err() { echo "ERROR: $*" >&2; exit 1; }
msg() { echo "[*] $*"; }

need_root() { [[ $(id -u) -eq 0 ]] || err "Run as root"; }
have() { command -v "$1" >/dev/null 2>&1; }

pci_path() {
  local slot="$1"
  echo "/sys/bus/pci/devices/0000:${slot}"
}

driver_of() {
  local slot="$1"
  local p="$(pci_path "$slot")/driver"
  [[ -L "$p" ]] && basename "$(readlink -f "$p")" || echo "none"
}

bind_to() {
  local drv="$1" slot="$2"
  local drvdir="/sys/bus/pci/drivers/${drv}"
  [[ -d "$drvdir" ]] || modprobe "$drv" || true
  echo "0000:${slot}" > "${drvdir}/bind" 2>/dev/null || true
}

unbind_from() {
  local drv="$1" slot="$2"
  local drvdir="/sys/bus/pci/drivers/${drv}"
  [[ -d "$drvdir" ]] && echo "0000:${slot}" > "${drvdir}/unbind" 2>/dev/null || true
}

# --- detect GPU + audio ----------------------------------------------------
detect_devices() {
  have lspci || err "lspci not found (install: pciutils)"

  # Zoek AMD Display controller (0380) of VGA (0300/0380) met vendor 1002
  local line
  line="$(lspci -Dnns | awk '/\[1002:.*\].*(VGA compatible controller|Display controller)/ {print $0}' | head -n1)"
  [[ -n "${line}" ]] || err "Geen AMD GPU gevonden via lspci"

  GPU_SLOT="$(awk '{print $1}' <<<"$line")"
  GPU_ID="$(awk -F'[][]' '{print $2}' <<<"$line")"      # bv 1002:150e

  # Audio-functie = zelfde device, functie .1 (meestal zo bij AMD)
  AUDIO_SLOT="$(sed 's/\.[0-9]\+$/.1/' <<<"$GPU_SLOT")"
  # Bevestig dat .1 bestaat; zo niet, probeer .0 te hergebruiken (geen audio)
  if [[ ! -d "$(pci_path "$AUDIO_SLOT")" ]]; then
    msg "Waarschuwing: kon audio-functie ${AUDIO_SLOT} niet vinden; ga verder zonder audio."
    AUDIO_SLOT=""
    AUDIO_ID=""
  else
    local aline
    aline="$(lspci -Dnns -s "$AUDIO_SLOT" || true)"
    AUDIO_ID="$(awk -F'[][]' '{print $2}' <<<"$aline")" # bv 1002:1640
  fi
}

# --- write vfio.conf -------------------------------------------------------
write_vfio_conf() {
  [[ -n "${GPU_ID:-}" ]] || err "GPU_ID niet bekend"
  msg "Schrijf ${VFIO_CONF} (vfio-pci ids=${GPU_ID}${AUDIO_ID:+,${AUDIO_ID}})"
  cat >"$VFIO_CONF" <<EOF
# Auto-generated by gpu-toggle.sh
options vfio-pci ids=${GPU_ID}${AUDIO_ID:+,${AUDIO_ID}}
softdep amdgpu pre: vfio-pci
blacklist amdgpu
blacklist radeon
# blacklist snd_hda_intel  # (uncomment als je audio ook altijd passthrought)
EOF
}

disable_vfio_conf() {
  if [[ -f "$VFIO_CONF" ]]; then
    msg "Disable ${VFIO_CONF}"
    mv "$VFIO_CONF" "${VFIO_CONF}.disabled.$(date +%s)"
  fi
}

ensure_amdgpu_autoload() {
  echo amdgpu > "$AMDGPU_ML"
}

# --- modes -----------------------------------------------------------------
do_status() {
  detect_devices
  echo "GPU  : ${GPU_SLOT} (id ${GPU_ID}) -> driver: $(driver_of "$GPU_SLOT")"
  if [[ -n "${AUDIO_SLOT}" ]]; then
    echo "Audio: ${AUDIO_SLOT} (id ${AUDIO_ID:-unknown}) -> driver: $(driver_of "$AUDIO_SLOT")"
  fi
  echo
  echo "vfio.conf: $( [[ -f $VFIO_CONF ]] && echo present || echo absent )"
  echo "Kernel cmdline (IOMMU needed for passthrough):"
  [[ -f /etc/kernel/cmdline ]] && grep -Eo 'amd_iommu=[^ ]+|iommu=pt' /etc/kernel/cmdline || echo "(no /etc/kernel/cmdline)"
}

do_host() {
  detect_devices
  msg "Schakel naar HOST (amdgpu)"
  disable_vfio_conf
  ensure_amdgpu_autoload

  modprobe amdgpu || true
  # Live unbind van vfio en binden aan amdgpu/snd_hda_intel
  unbind_from vfio-pci "$GPU_SLOT"
  bind_to amdgpu "$GPU_SLOT"

  if [[ -n "${AUDIO_SLOT}" ]]; then
    modprobe snd_hda_intel || true
    unbind_from vfio-pci "$AUDIO_SLOT"
    bind_to snd_hda_intel "$AUDIO_SLOT"
  fi

  update-initramfs -u || true
  echo
  do_status
  echo
  echo "Let op: als X/KMS/VA-API nog niet werkt, doe een reboot."
}

do_passthrough() {
  detect_devices
  msg "Schakel naar PASSTHROUGH (vfio-pci)"
  write_vfio_conf
  modprobe vfio-pci || true

  # Live unbind van amdgpu/snd en binden aan vfio
  unbind_from amdgpu "$GPU_SLOT"
  bind_to vfio-pci "$GPU_SLOT"

  if [[ -n "${AUDIO_SLOT}" ]]; then
    unbind_from snd_hda_intel "$AUDIO_SLOT"
    bind_to vfio-pci "$AUDIO_SLOT"
  fi

  update-initramfs -u || true
  echo
  do_status
  echo
  echo "Tip: controleer dat je kernel-cmdline IOMMU aan heeft:"
  echo "  grep -E 'amd_iommu=on|iommu=pt' /etc/kernel/cmdline"
  echo "Zo niet, doe dan:"
  echo "  sed -i 's|\$| amd_iommu=on iommu=pt|' /etc/kernel/cmdline && proxmox-boot-tool refresh && reboot"
}

# --- main ------------------------------------------------------------------
need_root
case "${1:-}" in
  host)        do_host ;;
  passthrough) do_passthrough ;;
  status)      do_status ;;
  *) echo "Usage: $0 {host|passthrough|status}"; exit 2 ;;
esac
